volumes:
  production_postgres_data: {}
  production_postgres_data_backups: {}
  production_traefik: {}
  production_django_media: {}

services:
  django: &django
    build:
      context: .
      dockerfile: ./compose/production/django/Dockerfile
    image: my_flashcards_production_django
    volumes:
      - production_django_media:/app/my_flashcards/media
    depends_on:
      - postgres
      - redis
#    healthcheck:
#      test: [ "CMD", "curl", "-f", "https://www.language-flashcards.pl" ]
#      interval: 30s
#      timeout: 10s
#      retries: 5
    env_file:
      - ./.envs/.production/.django
      - ./.envs/.production/.postgres
    command: /start
    networks:
      - backend
      - connector


  postgres:
    build:
      context: .
      dockerfile: ./compose/production/postgres/Dockerfile
    image: my_flashcards_production_postgres
    volumes:
      - production_postgres_data:/var/lib/postgresql/data
      - production_postgres_data_backups:/backups
      - ./prod_backups:/prod_backups
    env_file:
      - ./.envs/.production/.postgres
    networks:
      - backend

  redis:
    image: docker.io/redis:6
    networks:
      - backend

  celeryworker:
    <<: *django
    image: my_flashcards_production_celeryworker
    command: /start-celeryworker
    env_file:
      - ./.envs/.production/.django
      - ./.envs/.production/.postgres
#    depends_on:
#      django:
#        condition: service_healthy
    networks:
      - backend

  celerybeat:
    <<: *django
    image: my_flashcards_production_celerybeat
    command: /start-celerybeat
    env_file:
      - ./.envs/.production/.django
      - ./.envs/.production/.postgres
#    depends_on:
#      django:
#        condition: service_healthy
    networks:
      - backend

  flower:
    <<: *django
    image: my_flashcards_production_flower
    command: /start-flower
    env_file:
      - ./.envs/.production/.django
      - ./.envs/.production/.postgres
#    depends_on:
#      django:
#        condition: service_healthy
    networks:
      - backend

#  nginx:
#    image: nginx
#    build:
#      context: .
#      dockerfile: ./compose/production/nginx/Dockerfile
#    volumes:
#      - "./my_flashcards_frontend/dist:/dist"
#    #TODO REMOVE It
#    ports:
#      - "81:80"
#      - "444:443"
#    restart: always
#    depends_on:
#      - django
#    networks:
#      - connector
#      - backend
networks:
  backend:
  connector:
    external: true

