#!/bin/bash

set -o errexit
set -o pipefail
set -o nounset



# N.B. If only .env files supported variable expansion...
export CELERY_BROKER_URL="${REDIS_URL}"


if [ -z "${POSTGRES_USER}" ]; then
    base_postgres_image_default_user='postgres'
    export POSTGRES_USER="${base_postgres_image_default_user}"
fi
export DATABASE_URL="postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}"

#!/bin/bash

set -o errexit
set -o pipefail
set -o nounset

# Function to check PostgreSQL availability
wait_for_postgres() {
    wait-for-it.sh -t 60 ${POSTGRES_HOST}:${POSTGRES_PORT} -- echo "PostgreSQL is up"
}

# Wait for PostgreSQL to become available
wait_for_postgres

# Set environment variables
export CELERY_BROKER_URL="${REDIS_URL}"

if [ -z "${POSTGRES_USER}" ]; then
    base_postgres_image_default_user='postgres'
    export POSTGRES_USER="${base_postgres_image_default_user}"
fi
export DATABASE_URL="postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}"

# Run migrations
echo 'Running migrations...'
python manage.py migrate --noinput

# Start Django server or other command
echo 'Migrations complete, starting the Django server...'
exec "$@"
